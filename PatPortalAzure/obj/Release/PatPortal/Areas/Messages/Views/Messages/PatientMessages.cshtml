@using Kendo.Mvc.UI;
@using Kendo.Mvc.Infrastructure;
@using Kendo.Mvc.Extensions;
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Patient Messaging</title>
    <script src="@Url.Content("~/Content/js/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/js/kendo.all.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.9.1.custom.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/js/kendo.aspnetmvc.min.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/styles/kendo.default.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/styles/kendo.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/PatientMessages.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/jquery-ui-1.9.1.custom.min.css")" type="text/css" rel="stylesheet" />
    <!-- Use this js file for formatting date -->
    <script src="@Url.Content("~/Scripts/jquery.dateFormat-1.0.js")" type="text/javascript"></script>
    <!-- End -->
    

    <script type="text/javascript">
        $(document).ready(function () {
            var sel = $('div#grdInbox tbody tr').length;
            if (sel > 1) {
                var subject = $('div#grdInbox tr').find('td').eq(5).html();
                var notes = $('div#grdInbox tr').find('td').eq(6).html();
                $('div#grdInbox tbody tr:first').addClass('k-state-selected');
                $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();
                $("#tblReply").attr("style", "display:inline-block");
                $("#tblSend").attr("style", "display:none");

                var editor = $("#lblMessage").data("kendoEditor");


                if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                    subject = '(no subject)';
                }


                if (notes == '&nbsp;' || notes == 'null' || notes == '') {
                    notes = '(no message body)';
                }
                document.all('lblsubject').innerHTML = subject;
                $.ajax({
                    url: '/Messages/ConvertRtfToHtml',
                    type: 'Get',
                    data: { 'rtf': notes },
                    cache: false,
                    success: function (resp) {
                        // editor.value(resp.html);
                        document.all('lblMessage').innerHTML = resp.html;
                        $('#tblReply #lblMessage').find('div:last').remove();
                    }
                });

                var subjectmsg = $('div#grdInbox tr').find('td').eq(5).html();
                if (subjectmsg == '&nbsp;' || subjectmsg == 'null' || subjectmsg == '') {
                    subjectmsg = '';
                }

                if (notes == '(no message body)') {
                    notes = '';
                }


                document.getElementById('txthidden').value = "selected";
            }
            else {
                $("#ankReply").hide(); $("#ankDelete").hide(); $("#ankSend").show(); $("#ankClose").show();
                $("#tblReply").attr("style", "display:none");
                $("#tblSend").attr("style", "display:inline-block");
                $('#tblSend table.k-editor tbody tr:last td').css('height', '200px');
            }


        });

        function CheckIsRead() {
            $('div#grdInbox tbody tr:first').addClass('k-state-selected');
            var grid = $("#grdInbox").data("kendoGrid");
            var data = grid.dataSource.data();
            $.each(data, function (i, row) {
                var qtyRx = row.IsRead;
                if (qtyRx == false) {
                    $('tr[data-uid="' + row.uid + '"] td').addClass('someBoldClass');
                }
                else {
                    $('tr[data-uid="' + row.uid + '"] td').removeClass('someBoldClass');
                }
            });

            //alert(JSON.stringify(grid.dataItem(grid.tbody.find('tr').eq(1))));
            //$('div#grdInbox table tbody tr:first').addClass('k-state-selected');
            //$('div#grdInbox td').each(function () {
            //    if ($(this).children('input:checkbox').is(':checked')) {
            //        $(this).siblings('td').addClass('someBoldClass');
            //    }
            //    //$('div#grdInbox td input:checkbox:checked').parent('td').siblings('td').addClass('someBoldClass');
            //});
        }

        function Cancelnewmail() {
            $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();

            $("#tblReply").attr("style", "display:inline-block");
            $("#tblSend").attr("style", "display:none");
            return false;
        }

        function onSelectingGirdRow(arg) {
            var myvalue = '';
            var selected = $.map(this.select(), function (item) {
                myvalue = $(item);
                return $(item).text();
            });
            $('div#grdInbox tbody tr.k-state-selected').find('td').removeClass('someBoldClass');
            if ($('div#grdInbox tbody tr.k-state-selected').find('td').children('input:checkbox:checked').length >= 1) {
                var recno = $('div#grdInbox tr.k-state-selected').find('td').eq(1).html();
                $.ajax({
                    url: "/Messages/MakeMessageAsRead",
                    type: "Post",
                    data: { recno: recno },
                    cache:false,
                    success: function (readdata) {
                        if (readdata != 'read'&&readdata.error=='') {
                            $('div#grdInbox tr.k-state-selected td:first input:checkbox').removeAttr('checked');
                            $('div#grdInbox tr.k-state-selected td:first input:checkbox').attr('value', 'true');
                            var main = [];
                            $.each(readdata, function (k, v) {
                                var mydate = new Date(parseInt(v.NoteDate.substr(6)));
                                var formatDate = mydate.getUTCDate() + '-' + mydate.getUTCMonth() + '-' + mydate.getUTCFullYear();
                                main.push({"IsRead":v.IsRead, "RecNo": v.RecNo, "NoteDate": formatDate, "PatName": v.PatName, "NoteType": v.NoteType, "Subject": v.Subject, "Notes": v.Notes });
                            });
                            var grdInbox = $('#grdInbox').data('kendoGrid');
                            grdInbox.dataSource.data(main);
                            grdInbox.refresh();
                            $('div#grdInbox tbody tr:first').addClass('k-state-selected');
                        }
                        else if (readdata.error != '' && readdata.error != 'unauthorized') {
                            var errormessage = readdata.error;
                            var error = errormessage.split(';')[0].split(':')[1];
                            var controller = errormessage.split(';')[1].split(':')[1];
                            var actname = errormessage.split(';')[2].split(':')[1];
                            var senddata={ "error": error, "class": controller, "method":actname };
                            $.ajax({
                                url: '/Messages/Error',
                                type: 'GET',
                                data: senddata,
                                cache: false,
                                success: function (resp) {
                                    $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                }
                            });
                            
                        }
                        else if (readdata.error == 'unauthorized') { window.location.href = "/Account/Login";}
                        else {
                        }
                    }
                });
            }


            var i = $('div#grdInbox tr.k-state-selected').html();
            var PatientContent = String(selected);

            var PatientId = PatientContent.substring(0, 36);
            var editor = $("#txtsendemailcontent").data("kendoEditor");
            $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();
            $("#tblReply").attr("style", "display:inline-block");
            $("#tblSend").attr("style", "display:none");

            var g = $('div#grdInbox tr.k-state-selected').find('td').eq(5).html();
            if (g == '&nbsp;' || g == 'null' || g == '') {
                g = '(no subject)';
            }

            messagenote = $('div#grdInbox tr.k-state-selected').find('td').eq(6).html();
            if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                messagenote = '(no message body)';
            }

            document.all('lblsubject').innerHTML = g;
            $.ajax({
                url: '/Messages/ConvertRtfToHtml',
                type: 'Get',
                data: { 'rtf': messagenote },
                cache: false,
                success: function (resp) {
                    // editor.value(resp.html);
                    document.all('lblMessage').innerHTML = resp.html;
                    $('#tblReply #lblMessage').find('div:last').remove();
                }
            });
            var editor = $("#lblMessage").data("kendoEditor");
            editor.value(messagenote);

            var subject_msg = g;
            if (subject_msg == '&nbsp;' || subject_msg == 'null' || subject_msg == '') {
                subject_msg = '';
            }
            document.getElementById('txtsendemailsubject').value = g;
            editor.value(message);

        }

        $("#dialog").dialog({
            autoOpen: false,
            width: 400,
            modal: true,
            title:'Error Occured',
            buttons: [
                {
                    text: "Ok",
                    click: function () {
                        $(this).dialog("close");
                    }
                }
            ]
        });
        

        function onSelectingSentGirdRow(arg) {
            var myvalue = '';
            var selected = $.map(this.select(), function (item) {
                myvalue = $(item);
                return $(item).text();
            });

            var PatientContent = String(selected);


            var PatientId = PatientContent.substring(0, 36);


            var editor = $("#txtSentsendemailcontent").data("kendoEditor");

            $("#ankSentReply").show(); $("#ankSentDelete").show(); $("#ankSentSend").hide(); $("#ankSentClose").hide();
            $("#tblSentReply").attr("style", "display:inline-block");
            $("#tblSentSend").attr("style", "display:none");

            var g = $('div#grdSent tr.k-state-selected').find('td').eq(4).html();
            var message = $('div#grdSent tr.k-state-selected').find('td').eq(5).html();
            if (g == '&nbsp;' || g == 'null' || g == '') {
                g = '(no subject)';
            }
            document.all('lblSentsubject').innerHTML = g;
            var messagenote = message;
            if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                messagenote = '(no message body)';
            }
            $.ajax({
                url: '/Messages/ConvertRtfToHtml',
                type: 'Get',
                data: { 'rtf': messagenote },
                cache: false,
                success: function (resp) {
                     $('#lblSentMessage').html(resp.html);
                    $('#tblSentReply #lblSentMessage').find('div:last').remove();
                }
            });
            

            //$('#lblSentMessage').html(messagenote.replace(/&amp;/g,'&').replace(/nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
            var subject_msg = (g);
            if (subject_msg == '&nbsp;' || subject_msg == 'null' || subject_msg == '') {
                subject_msg = '';
            }
            document.getElementById('txtSentsendemailsubject').value = g;

            editor.value(message);

            document.getElementById('txthidden').value = "selected";

        }

        function CloseEditor() {
            var sel = $('div#grdSent tbody tr').length;
            if (sel >= 1) {
                $('#tblSentSend').css('display', 'none');
                $('#ankSentSend').css('display', 'none');
                $('#ankSentClose').css('display', 'none');
                $('#tblSentReply').css('display', 'block');
                $('#ankSentDelete').css('display', 'block');
            }
            else {
                return false;
            }
        }

        function onSelectingDeleteGirdRow(arg) {
            var myvalue = '';
            var selected = $.map(this.select(), function (item) {
                myvalue = $(item);
                return $(item).text();
            });

            $('#tblDeleteReply').css('display', 'block');
            var PatientContent = String(selected);


            var PatientId = PatientContent.substring(0, 36);

            var g = $('div#grdDelete tr.k-state-selected').find('td').eq(4).html();
            if (g == '&nbsp;' || g == 'null' || g == '') {
                g = '(no subject)';
            }
            $('#lblDeletesubject').html(g);

            var messagenote = $('div#grdDelete tr.k-state-selected').find('td').eq(5).html(); //data[0].Notes;
            if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                messagenote = '(no message body)';
            }
            if (messagenote.substring(0, 1) == '&') {
                $('#lblDeleteMessage').html(messagenote.replace(/&amp;/g, '&').replace(/nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
            }
            else {
                $.ajax({
                    url: '/Messages/ConvertRtfToHtml',
                    type: 'Get',
                    data: { 'rtf': messagenote },
                    cache: false,
                    success: function (resp) {
                        // editor.value(resp.html);
                        document.all('lblDeleteMessage').innerHTML = resp.html;
                        $('#tblDeleteReply #lblDeleteMessage').find('div:last').remove();
                    }
                });
            }
            //document.all('lblDeleteMessage').innerHTML = messagenote;

        }
        function gotoDeleteReply() {

            var selected = document.getElementById('txthidden').value;

            if (selected != '' && selected != null) {
                $("#ankDeleteReply").hide(); $("#ankDeleteDelete").hide(); $("#ankDeleteSend").show(); $("#ankDeleteClose").show();

                document.getElementById('txtDeletesendemailsubject').value = document.all('lblDeleteMessage').innerHTML;
                $("#tblDeleteReply").attr("style", "display:none");
                $("#tblDeleteSend").attr("style", "display:inline-block");
                $("#ankDeleteClose").attr("onclick", "return gotoDeleteCancel();");
            }
            else {
                alert('Please first select a message');
            }
            return false;
        }
        function gotoDeleteCancel() {
            $("#ankDeleteReply").show(); $("#ankDeleteDelete").show(); $("#ankDeleteSend").hide(); $("#ankDeleteClose").hide();

            $("#tblDeleteReply").attr("style", "display:inline-block");
            $("#tblDeleteSend").attr("style", "display:none");
            return false;
        }

        function gotoSentReply() {
            var selected = document.getElementById('txthidden').value;
            $("#ankSentReply").hide(); $("#ankSentDelete").hide(); $("#ankSentSend").show(); $("#ankSentClose").show();
            var editor = $("#txtSentsendemailcontent").data("kendoEditor");
            var msg = document.all('lblSentsubject').innerHTML;
            if (msg == '(no subject)') {
                msg = '';
            }
            var body = document.all('lblSentMessage').innerHTML;
            if (body == '(no message body)') {
                body = '';
            }

            editor.value(body);

            document.getElementById('txtSentsendemailsubject').value = msg;

            $("#tblSentReply").attr("style", "display:none");
            $("#tblSentSend").attr("style", "display:inline-block");
            $("#ankSentClose").attr("onclick", "return gotoSentCancel();");

            return false;
        }
        function gotoSentCancel() {
            $("#ankSentReply").show(); $("#ankSentDelete").show(); $("#ankSentSend").hide(); $("#ankSentClose").hide();

            $("#tblSentReply").attr("style", "display:inline-block");
            $("#tblSentSend").attr("style", "display:none");
            return false;
        }

        function gotoReply() {
            var selected = document.getElementById('txthidden').value;
            $('#tblSend table.k-editor tbody tr:last td').css('height', '200px');
            var editor = $("#txtsendemailcontent").data("kendoEditor");
            $("#ankReply").hide(); $("#ankDelete").hide(); $("#ankSend").show(); $("#ankClose").show();

            var msg = document.all('lblsubject').innerHTML;

            if (msg == '(no subject)') {
                msg = '';
            }
            var body = document.all('lblMessage').innerHTML;
            if (body == '(no message body)') {
                body = '';
            }

            editor.value(body);

            document.getElementById('txtsendemailsubject').value = msg;
            $("#tblReply").attr("style", "display:none");
            $("#tblSend").attr("style", "display:inline-block");
            $("#ankClose").attr("onclick", "return gotoCancel();");

            return false;
        }
        function gotoCancel() {
            var sel = $('div#grdInbox tbody tr').length;
            if (sel >= 1) {
                $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();
                $("#tblReply").attr("style", "display:inline-block");
                $("#tblSend").attr("style", "display:none");
            }
            return false;
        }

        function gotoNew() {
            var editor = $("#txtsendemailcontent").data("kendoEditor");
            $("#ankReply").hide(); $("#ankDelete").hide(); $("#ankSend").show(); $("#ankClose").show();

            $("#tblReply").attr("style", "display:none");
            $("#tblSend").attr("style", "display:inline-block");
            document.getElementById('txtsendemailsubject').value = '';

            $("#ankSentReply").hide(); $("#ankSentDelete").hide(); $("#ankSentSend").show(); $("#ankSentClose").show();

            $("#tblSentReply").attr("style", "display:none");
            $("#tblSentSend").attr("style", "display:inline-block");
            document.getElementById('txtSentsendemailsubject').value = '';

            var Senteditor = $('#txtSentsendemailcontent').data("kendoEditor");

            document.getElementById('txthidden').value = '';
            $("#ankClose").attr("onclick", "return gotoCancel();");

            $('#tblSend table.k-editor tbody tr:last td').css('height', '200px');
            $('#tblSentSend table.k-editor tbody tr:last td').css('height', '200px');

            Senteditor.value('');
            editor.value('');
            return false;
        }

        function gotoDelete() {

            var sel = $('div#grdInbox tr.k-state-selected').length;
            var recno = $('div#grdInbox tr.k-state-selected').find('td').eq(1).html();
            if (sel >= 1) {
                var condition = confirm('Are you sure you want to delete this message?');
                if (condition) {
                    $.ajax({
                        url: '/Messages/DeleteMessages',
                        type: 'POST',
                        data: { "recno": recno },
                        cache: false,
                        success: function (data) {
                            if (data.error == null&&data.result=='success') {
                                $('div#grdInbox tr.k-state-selected').remove();
                                //ClearInboxFields();
                                if ($('div#grdInbox tbody tr').length >= 1) {
                                    $('div#grdInbox tbody tr:first').addClass('k-state-selected');
                                    $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();
                                    $("#tblReply").attr("style", "display:inline-block");
                                    $("#tblSend").attr("style", "display:none");
                                    var subject = $('div#grdInbox tr.k-state-selected').find('td').eq(5).html();
                                    if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                                        subject = '(no subject)';
                                    }

                                    $('#lblsubject').html(subject);

                                    var messagenote = $('div#grdInbox tr.k-state-selected').find('td').eq(6).html();
                                    if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                                        messagenote = '(no subject)';
                                    }
                                    $.ajax({
                                        url: '/Messages/ConvertRtfToHtml',
                                        type: 'Get',
                                        data: { 'rtf': messagenote },
                                        cache: false,
                                        success: function (resp) {
                                            // editor.value(resp.html);
                                            document.all('lblMessage').innerHTML = resp.html;
                                            $('#tblReply #lblMessage').find('div:last').remove();
                                        }
                                    });

                                    $('#tblReply #lblMessage').html($('div#grdInbox tr.k-state-selected').find('td').eq(6).html());
                                }
                                else{
                                    $("#ankReply").hide(); $("#ankDelete").hide(); $("#ankSend").show(); $("#ankClose").show();
                                    $("#tblReply").attr("style", "display:none");
                                    $("#tblSend").attr("style", "display:inline-block");

                                    $('#txtsendemailsubject').val('');

                                    var editor = $('#txtsendemailcontent').data('kendoEditor');
                                    editor.value('');
                                    $('#tblSend table.k-editor tbody tr:last td').css('height', '200px');
                                }
                            }
                            else if (data.error != '' && data.error != 'unauthorized') {
                                var errormessage = data.error;
                                var error = errormessage.split(';')[0].split(':')[1];
                                var controller = errormessage.split(';')[1].split(':')[1];
                                var actionname = errormessage.split(';')[2].split(':')[1];
                                $.ajax({
                                    url: '/Messages/Error',
                                    type: 'GET',
                                    data: { "error": error, "class": controller, "method":actionname },
                                    cache: false,
                                    success: function (resp) {
                                        $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                    }
                                });
                            
                            }
                            else if (data.error == 'unauthorized') { window.location.href = "/Account/Login";}
                            else {
                                $("#ankReply").hide(); $("#ankDelete").hide(); $("#ankSend").show(); $("#ankClose").show();
                                $("#tblReply").attr("style", "display:none");
                                $("#tblSend").attr("style", "display:inline-block");
                            }
                            }
                    });

                }
            }
            else {
                alert('Please first select a message');
                return false;
            }
            return false;
        }

        function gotoSentDelete() {
            var selected = document.getElementById('txthidden').value;
            var sel = $('div#grdSent tr.k-state-selected').length;
            var recno = $('div#grdSent tr.k-state-selected').find('td').eq(0).html();
            if (sel >= 1) {
                var condition = confirm('Are you sure you want to delete this message?');
                if (condition) {
                    $.ajax({
                        url: '/Messages/DeleteSentMessage',
                        type: 'POST',
                        data: { "recno": recno },
                        cache: false,
                        success: function (data) {
                            if (data.result == 'success') {
                                $('div#grdSent tbody tr.k-state-selected').remove();
                                if ($('div#grdSent tbody tr').length >= 1) {
                                    $('div#grdSent tbody tr:first').addClass('k-state-selected');
                                    $("#tblSentReply").attr("style", "display:inline-block");
                                    $("#tblSentSend").attr("style", "display:none");
                                    $("#ankSentSend").hide(); $("#ankSentClose").hide(); $("#ankSentDelete").show();
                                    var subject = $('div#grdSent tr.k-state-selected').find('td').eq(4).html();
                                    if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                                        subject = '(no subject)';
                                    }
                                    $('#lblSentsubject').html(subject);

                                    var messagenote = $('div#grdSent tr.k-state-selected').find('td').eq(5).html();
                                    if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                                        messagenote = '(no subject)';
                                    }

                                    $.ajax({
                                        url: '/Messages/ConvertRtfToHtml',
                                        type: 'Get',
                                        data: { 'rtf': messagenote },
                                        cache: false,
                                        success: function (resp) {
                                            $('#lblSentMessage').html(resp.html);
                                            $('#tblSentReply #lblSentMessage').find('div:last').remove();
                                        }
                                    });

                                    //$('#lblSentMessage').html(messagenote.replace(/&amp;/g, '&').replace(/nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
                                    //$('#lblSentMessage').html($('div#grdSent tbody tr.k-state-selected').find('td').eq(5).html());
                                }
                                else {
                                    $("#tblSentReply").attr("style", "display:none");
                                    $("#tblSentSend").attr("style", "display:inline-block");
                                    $("#ankSentSend").show(); $("#ankSentClose").show(); $("#ankSentDelete").hide();
                                    $('#txtSentsendemailsubject').val('');

                                    var editor = $('#txtSentsendemailcontent').data('kendoEditor');
                                    editor.value('');
                                    $('#tblSentSend table.k-editor tbody tr:last td').css('height', '200px');
                                }
                            }
                            else if (data.error != '' && data.error != 'unauthorized') {
                                var errormessage = data.error;
                                var error = errormessage.split(';')[0].split(':')[1];
                                var controller = errormessage.split(';')[1].split(':')[1];
                                var actionname = errormessage.split(';')[2].split(':')[1];
                                $.ajax({
                                    url: '/Messages/Error',
                                    type: 'GET',
                                    data: { "error": error, "class": controller, "method": actionname },
                                    cache: false,
                                    success: function (resp) {
                                        $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                    }
                                });

                            }
                            else if (data.error == 'unauthorized') { window.location.href = "/Account/Login"; }
                            else {
                                $("#tblSentReply").attr("style", "display:none");
                                $("#tblSentSend").attr("style", "display:inline-block");
                                $("#ankSentSend").show(); $("#ankSentClose").show(); $("#ankSentDelete").hide();
                            }
                        }
                    });
                    return true;
                }
            }
            else {
                alert('Please first select a message');
                return false;
            }
            return false;
        }
        function gotoDeleteDelete() {
            var selected = document.getElementById('txthidden').value;

            if (selected != '' && selected != null) {
                var condition = confirm('Are you sure you want to delete this message?');
                if (condition) {
                    return true;
                }
            }
            else {
                alert('Please first select a message');
                return false;
            }
            return false;
        }
        function onPatientChange() {
            alert(this.value);
        }

    </script>
    <script>
        function InboxPop() {
            var sel = $('div#grdInbox tbody tr').length;
            $('#btnNew').css('display', 'block');
            if (sel >0) {
                $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();

                $("#tblReply").attr("style", "display:inline-block");
                $("#tblSend").attr("style", "display:none");
                $.ajax({
                    url: '/Messages/GetInboxMessages',
                    type: 'POST',
                    data: { username: '@User.Identity.Name' },
                    cache: false,
                    success: function (data) {
                        if (data.error == null) {
                            var main = [];
                            $.each(data, function (k, v) {
                                var mydate = new Date(parseInt(v.NoteDate.substr(6)));
                                var formatDate = mydate.getUTCDate() + '-' + mydate.getUTCMonth() + '-' + mydate.getUTCFullYear();
                                main.push({ "RecNo": v.RecNo, "NoteDate": formatDate, "PatName": v.PatName, "NoteType": v.NoteType, "Subject": v.Subject, "Notes": v.Notes });
                            });
                            var grdInbox = $('#grdInbox').data('kendoGrid');
                            grdInbox.dataSource.data(main);
                            $('div#grdInbox tbody tr:first').addClass('k-state-selected');
                        }
                        else if (data.error != '' && data.error != 'unauthorized') {
                            var errormessage = data.error;
                            var error = errormessage.split(';')[0].split(':')[1];
                            var controller = errormessage.split(';')[1].split(':')[1];
                            var actionname = errormessage.split(';')[2].split(':')[1];
                            $.ajax({
                                url: '/Messages/Error',
                                type: 'GET',
                                data: { "error": error, "class": controller, "method": actionname },
                                cache: false,
                                success: function (resp) {
                                    $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                }
                            });

                        }
                        else if (data.error == 'unauthorized') { window.location.href = "/Account/Login"; }
                        else { }


                    }

                });
            }
            else {
                $('#txtsendemailsubject').val('');
                var editor = $("#txtsendemailcontent").data("kendoEditor");
                editor.value('');
                $("#ankReply").hide(); $("#ankDelete").hide(); $("#ankSend").show(); $("#ankClose").show();
                $("#tblReply").attr("style", "display:none");
                $("#tblSend").attr("style", "display:inline-block");
                $('#tblSend table.k-editor tbody tr:last td').css('height', '200px');
            }
            $(".k-pane.k-scrollable").attr("style", "position: absolute; top: 0px; width: 562px; height: 500px; left: 0px;");
            $(".k-splitbar.k-state-default.k-splitbar-horizontal.k-splitbar-draggable-horizontal").attr("style", "height: 500px; left: 562px;");

            $("#center-pane").attr("style", "position: absolute; top: 0px; width: 554px; height: 500px; left: 569px;");


        }
        function Sentpop() {
            var sel = $('div#grdSent tbody tr').length;
            $('#btnNew').css('display', 'block');
            $.ajax({
                url: '/Messages/GetSentMessages',
                type: 'POST',
                data: { username: '@User.Identity.Name' },
                    cache: false,
                    success: function (data) {
                        if (data.error == null) {
                            var main = [];
                            $.each(data, function (k, v) {
                                var mydate = new Date(parseInt(v.NoteDate.substr(6)));
                                var formatDate = mydate.getUTCDate() + '-' + mydate.getUTCMonth() + '-' + mydate.getUTCFullYear();
                                main.push({ "RecNo": v.RecNo, "NoteDate": formatDate, "PatName": v.PatName, "NoteType": v.NoteType, "Subject": v.Subject, "Notes": v.Notes });
                            });
                            var grdSent = $('#grdSent').data('kendoGrid');
                            grdSent.dataSource.data(main);
                            grdSent.refresh();
                            $('div#grdSent tbody tr:first').addClass('k-state-selected');
                            var subject = $('div#grdSent tbody  tr:first').find('td').eq(4).html();
                            var notes = $('div#grdSent tbody tr:first').find('td').eq(5).html();
                            if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                                subject = '(no subject)';
                            }
                            document.all('lblSentsubject').innerHTML = subject;

                            var messagenote = notes;
                            if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                                messagenote = '(no message body)';
                            }

                            $.ajax({
                                url: '/Messages/ConvertRtfToHtml',
                                type: 'Get',
                                data: { 'rtf': messagenote },
                                cache: false,
                                success: function (resp) {
                                    $('#lblSentMessage').html(resp.html);
                                    $('#tblSentReply #lblSentMessage').find('div:last').remove();
                                }
                            });
                            //$('#lblSentMessage').html(messagenote.replace(/&amp;/g, '&').replace(/nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
                        }
                        else if (data.error != null && data.error != 'unauthorized') {
                            var errormessage = data.error;
                            var error = errormessage.split(';')[0].split(':')[1];
                            var controller = errormessage.split(';')[1].split(':')[1];
                            var actionname = errormessage.split(';')[2].split(':')[1];
                            $.ajax({
                                url: '/Messages/Error',
                                type: 'GET',
                                data: { "error": error, "class": controller, "method": actionname },
                                cache: false,
                                success: function (resp) {
                                    $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                }
                            });

                        }
                        else if (data.error == 'unauthorized') { window.location.href = "/Account/Login"; }
                        else { }
                    }

            });
            if (sel > 0) {
                if ($('div#grdSent tbody tr.k-state-selected').length <= 0) {
                    $('div#grdSent tbody tr:first').addClass('k-state-selected');
                }
                var subject = $('div#grdSent tbody  tr.k-state-selected').find('td').eq(4).html();
                var notes = $('div#grdSent tbody tr.k-state-selected').find('td').eq(5).html();
                if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                    subject = '(no subject)';
                }
                document.all('lblSentsubject').innerHTML = subject;

                var messagenote = notes;
                if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                    messagenote = '(no message body)';
                }
                $.ajax({
                    url: '/Messages/ConvertRtfToHtml',
                    type: 'Get',
                    data: { 'rtf': messagenote },
                    cache: false,
                    success: function (resp) {
                        $('#lblSentMessage').html(resp.html);
                        $('#tblSentReply #lblSentMessage').find('div:last').remove();
                    }
                });
                //$('#lblSentMessage').html(messagenote.replace(/&amp;/g, '&').replace(/nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
                //document.all('lblSentMessage').innerHTML = messagenote;
                $("#tblSentReply").attr("style", "display:inline-block");
                $("#tblSentSend").attr("style", "display:none");
                $("#ankSentSend").hide(); $("#ankSentClose").hide(); $("#ankSentDelete").show();
            }
            else {
                var editor = $('#txtSentsendemailcontent').data('kendoEditor');
                editor.value('');
                $('#tblSentSend table.k-editor tbody tr:last td').css('height', '200px');
            }

            $("#horizontalSent").attr("style", "background:whitesmoke;height:100%");
            $(".k-pane.k-scrollable").attr("style", "position: absolute; top: 0px; width: 562px; height: 500px; left: 0px;");
            $(".k-splitbar.k-state-default.k-splitbar-horizontal.k-splitbar-draggable-horizontal").attr("style", "height: 500px; left: 562px;");
            $("#center-pane1").attr("style", "position: absolute; top: 0px; width: 531px; height: 500px; left: 569px;");

        }
        function DeletePop() {
            $('#btnNew').css('display', 'none');
            $('div#grdDelete tbody tr:first').addClass('k-state-selected');
            $.ajax({
                url: '/Messages/GetDeleteMessages',
                type: 'POST',
                data: { username: '@User.Identity.Name' },
                cache: false,
                success: function (data) {
                    if (data.error == null) {
                        var main = [];
                        $.each(data, function (k, v) {
                            var mydate = new Date(parseInt(v.DeletedDatetime.substr(6)));
                            var formatDate = mydate.getUTCDate() + '-' + mydate.getUTCMonth() + '-' + mydate.getUTCFullYear();
                            main.push({ "RecNo": v.RecNo, "PatName": v.PatName, "Subject": v.Subject, "NoteType": v.NoteType, "Notes": v.Notes, "DeletedDatetime": formatDate });
                        });
                        var grdDelete = $('#grdDelete').data('kendoGrid');
                        grdDelete.dataSource.data(main);
                        grdDelete.refresh();
                        $('div#grdDelete tbody tr:first').addClass('k-state-selected');
                        if ($('div#grdDelete tbody tr').length >= 1) {
                            $('#tblDeleteReply').css('display', 'block');
                            var g = $('div#grdDelete tr.k-state-selected').find('td').eq(4).html();
                            if (g == '&nbsp;' || g == 'null' || g == '') {
                                g = '(no subject)';
                            }
                            $('#lblDeletesubject').html(g);

                            var message_note = $('div#grdDelete tr.k-state-selected').find('td').eq(5).html();
                            if (message_note == '&nbsp;' || message_note == 'null' || message_note == '') {
                                message_note = '(no message body)';
                            }

                            if (message_note.substring(0, 1) == '&') {
                                $('#lblDeleteMessage').html(message_note.replace(/&amp;/g, '&').replace(/nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>'));
                            }
                            else {
                                $.ajax({
                                    url: '/Messages/ConvertRtfToHtml',
                                    type: 'Get',
                                    data: { 'rtf': message_note },
                                    cache: false,
                                    success: function (resp) {
                                        // editor.value(resp.html);
                                        document.all('lblDeleteMessage').innerHTML = resp.html;
                                        $('#tblDeleteReply #lblDeleteMessage').find('div:last').remove();
                                    }
                                });
                            }
                        }
                        else {
                            $('#tblDeleteReply').css('display', 'none');
                        }

                    }
                    else if (data.error != '' && data.error != 'unauthorized') {
                        var errormessage = data.error;
                        var error = errormessage.split(';')[0].split(':')[1];
                        var controller = errormessage.split(';')[1].split(':')[1];
                        var actionname = errormessage.split(';')[2].split(':')[1];
                        $.ajax({
                            url: '/Messages/Error',
                            type: 'GET',
                            data: { "error": error, "class": controller, "method": actionname },
                            cache: false,
                            success: function (resp) {
                                $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                            }
                        });

                    }
                    else if (data.error == 'unauthorized') { window.location.href = "/Account/Login"; }
                    else { }
                }
            });
                //document.all('lblDeleteMessage').innerHTML = message_note;
                $("#horizontalDelete").attr("style", "background:whitesmoke;height:100%");
                $(".k-pane.k-scrollable").attr("style", "position: absolute; top: 0px; width: 562px; height: 500px; left: 0px;");
                $(".k-splitbar.k-state-default.k-splitbar-horizontal.k-splitbar-draggable-horizontal").attr("style", "height: 500px; left: 562px;");

                $("#center-pane2").attr("style", "position: absolute; top: 0px; width: 531px; height: 500px; left: 569px;");

            }

            function gotoInboxMailSend() {
                var subject = $('#txtsendemailsubject').val();
                var Message = $('#txtsendemailcontent').val();
                var ToAddress = $('#spnsendtoemail').html(); // $('#txtsendtoemail').val();
                var FromAddress = $('#spnsendfromemail').html(); //$('#txtsendfromemail').val();
                if (subject != '' || Message != '') {
                        var SendData = { "Subject": subject, "Body": Message, "ToAddress": ToAddress, "FromAddress": FromAddress };
                        $("#customLoadingPanel").show();
                        $.ajax({
                            type: "POST",
                            url: '/Messages/InboxDataSend',
                            data: JSON.stringify(SendData),
                            dataType: 'json',
                            contentType: "application/json; charset=utf-8",
                            cache: false,
                            async: false,
                            success: function (data) {
                                if (data.result == 'success') {
                                    alert('Message sent successfuly');
                                    $("#ankReply").show(); $("#ankDelete").show(); $("#ankSend").hide(); $("#ankClose").hide();

                                    $("#tblReply").attr("style", "display:inline-block");
                                    $("#tblSend").attr("style", "display:none");

                                    //this is to hide the inbox tab
                                    $("div#tabstrip ul li:first").removeClass('k-item k-state-default k-first k-tab-on-top k-state-active');
                                    $("div#tabstrip ul li:first").addClass('k-item k-state-default k-first');

                                    $("div#tabstrip div#tabstrip-1").removeClass('k-content k-state-active');
                                    $("div#tabstrip div#tabstrip-1").addClass('k-content');
                                    $('#tabstrip-1').css('display', 'none')
                                    //inbox hide end here

                                    //this is to show the send tab
                                    $("div#tabstrip ul li:nth-child(2)").removeClass('k-item k-state-default');
                                    $("div#tabstrip ul li:nth-child(2)").addClass('k-item k-state-default k-tab-on-top k-state-active');


                                    $("div#tabstrip div#tabstrip-2").removeClass('k-content');
                                    $("div#tabstrip div#tabstrip-2").addClass('k-content k-state-active');
                                    $('#tabstrip-2').css('display', 'block')

                                    $("#tblSentReply").attr("style", "display:inline-block");
                                    $("#tblSentSend").attr("style", "display:none");
                                    $("#ankSentSend").hide(); $("#ankSentClose").hide(); $("#ankSentDelete").show();

                                    $("#horizontalSent").attr("style", "background:whitesmoke;height:100%");
                                    $(".k-pane.k-scrollable").attr("style", "position: absolute; top: 0px; width: 562px; height: 500px; left: 0px;");
                                    $(".k-splitbar.k-state-default.k-splitbar-horizontal.k-splitbar-draggable-horizontal").attr("style", "height: 500px; left: 562px;");
                                    $("#center-pane1").attr("style", "position: absolute; top: 0px; width: 531px; height: 500px; left: 569px;");


                                    //here we bind the first row of the sent grid item
                                    $('div#grdSent tbody tr:first').addClass('k-state-selected');
                                    var subject = $('div#grdSent tbody tr.k-state-selected').find('td').eq(5).html();
                                    var notes = $('div#grdSent tbody tr.k-state-selected').find('td').eq(6).html();
                                    if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                                        subject = '(no subject)';
                                    }
                                    document.all('lblSentsubject').innerHTML = subject;

                                    var messagenote = notes;
                                    if (messagenote == '&nbsp;' || messagenote == 'null' || messagenote == '') {
                                        messagenote = '(no message body)';
                                    }
                                    document.all('lblSentMessage').innerHTML = messagenote;
                                    Sentpop();
                                    $("#customLoadingPanel").hide();
                                }

                                else if (data.result == 'unauthorized') { window.location.href = "/Account/Login"; }
                                else {
                                    $("#customLoadingPanel").hide();
                                    var errormessage = data.error;
                                    var error = errormessage.split(';')[0].split(':')[1];
                                    var controller = errormessage.split(';')[1].split(':')[1];
                                    var actionname = errormessage.split(';')[2].split(':')[1];
                                    $.ajax({
                                        url: '/Messages/Error',
                                        type: 'GET',
                                        data: { "error": error, "class": controller, "method": actionname },
                                        cache: false,
                                        success: function (resp) {
                                            $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                        }
                                    });

                                }
                                //Clear data
                            },
                            Error: function ()
                            { alert("Error!"); }
                        });
                }
                else {
                    alert('Please make sure that subject or body not to empty.');
                    return false;
                }
            }

            function ClearInboxFields() {
                var editor = $("#txtsendemailcontent").data("kendoEditor");
                document.all('lblsubject').innerHTML = '';
                document.all('lblfromemail').innerHTML = '';
                document.all('lbltoemail').innerHTML = '';
                document.all('lblMessage').innerHTML = '';
                document.getElementById('txtsendemailsubject').value = '';
                editor.value('');
            }
            function gotoSentMailSend() {
                var subject = $('#txtSentsendemailsubject').val();
                var Message = $('#txtSentsendemailcontent').val();
                var ToAddress = $('#spnSentsendtoemail').text();

                var FromAddress = $('#spnSentsendfromemail').text();
                if (subject != '' || Message != '') {
                        var SendData = { "Subject": subject, "Body": Message, "ToAddress": ToAddress, "FromAddress": FromAddress };
                        $.ajax({
                            type: "POST",
                            url: '/Messages/InboxDatasend',
                            data: JSON.stringify(SendData),
                            dataType: 'json',
                            contentType: "application/json; charset=utf-8",
                            cache: false,
                            success: function (result) {
                                if (result.result == 'success') {
                                    alert('Message sent successfully');
                                        $('div#grdSent tbody tr:first').addClass('k-state-selected');
                                        $("#tblSentReply").attr("style", "display:inline-block");
                                        $("#tblSentSend").attr("style", "display:none");
                                        $("#ankSentSend").hide(); $("#ankSentClose").hide(); $("#ankSentDelete").show();
                                        var subject = $('div#grdSent tr.k-state-selected').find('td').eq(4).html();
                                        if (subject == '&nbsp;' || subject == 'null' || subject == '') {
                                            subject = '(no subject)';
                                        }

                                        $('#tblSentReply #lblSentsubject').html(subject);
                                        $('#tblSentReply #lblSentMessage').html($('div#grdSent tbody tr.k-state-selected').find('td').eq(5).html());
                                        Sentpop();
                                }
                                else if (data.result == 'unauthorized') { window.location.href = "/Account/Login"; }
                                else {
                                    var errormessage = result.error;
                                    var error = errormessage.split(';')[0].split(':')[1];
                                    var controller = errormessage.split(';')[1].split(':')[1];
                                    var actionname = errormessage.split(';')[2].split(':')[1];
                                    $.ajax({
                                        url: '/Messages/Error',
                                        type: 'GET',
                                        data: { "error": error, "class": controller, "method": actionname },
                                        cache: false,
                                        success: function (resp) {
                                            $('#dialog').html(resp).dialog({ modal: true }).dialog('open');
                                        }
                                    });

                                }
                            }

                        });
                    }
                else {
                    alert('Please make sure that subject or message not to empty.');
                    return false;
                }
            }

            function parseMSJSONString(data) {
                try {
                    var newdata = data.replace(
                new RegExp('"\\\\\/Date\\\((-?[0-9]+)\\\)\\\\\/"', "g")
                            , "new Date($1)");
                    newdata = eval('(' + newdata + ')');
                    return newdata;
                }
                catch (e) { return null; }
            }

            function gotoDeleteMailSend() {
                var subject = $('#txtDeletesendemailsubject').val();
                var Message = $('#txtDeletesendemailcontent').val();
                var ToAddress = $('#txtdeleteToemail').val();

                var FromAddress = $('#txtdeleteFromemail').val();

                var SendData = { "Subject": subject, "Body": Message, "ToAddress": ToAddress, "FromAddress": FromAddress };
                $.ajax({
                    type: "POST",
                    url: '/Messages/InboxDatasend',
                    data: JSON.stringify(SendData),
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    cache: false,
                    async: false,
                    success: function (data) {
                        var grid = $("#grdSent").data("kendoGrid");
                        var new_data = data;
                        grid.dataSource.data(new_data);
                    }
                });
            }

            function ChangePatient() {
                var patid = $('#ddlPatients').val();
                $.ajax({
                    url: '/Account/UpdatePatient',
                    type: 'POST',
                    data: { patid: patid },
                    cache: false,
                    success: function (response) {
                        if (response.result == "success") {
                            $('#ankusername').text('Welcome ' + $('#ddlPatients').data('kendoDropDownList').text());
                            $('#ankusername').append("<img src='/Content/images/bluemanm.png' alt='UserInfo' height='8' class='UserInfo_img' style='visibility: hidden' />");
                        }
                    }
                });
            }
    </script>
    <style type="text/css">
        div.k-state-active {
            padding-left: 13px;
        }
    </style>
</head>
<body>
    <div align="center" style="margin-top: -3.6%">
        <table align="center" width="101%" cellspacing="4" cellpadding="5" style="text-align: center; margin-left: -7.5px;">
            <tr>
                <td align="center"></td>
            </tr>
            <tr>
                <td align="center">
                    
                    <table cellspacing="3" align="center" style="margin-left: -6%;width:110%">
                        <tr>
                            <input type="hidden" value="" id="txthidden" />
                              
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td>
                    <input type="button" class="default XLargePaddingRight" style="width: 90px; margin-top: 3px; float: right;"
                        id="btnNew" onclick="return gotoNew();" value="New Email" />
                    @(Html.Kendo().TabStrip()
          .Name("tabstrip")
                  .HtmlAttributes(new { style = "width:99%;height: 110%;border:none;" })
          .Items(tabstrip =>
          {
              tabstrip.Add().Text("Inbox")
                  .Selected(true)
                  .HtmlAttributes(new { style = "height: 110%;width:120px;border-radius: 6px 6px 0 0;", onclick = "InboxPop()" })
                  .Content(


                            @<text>
                    @RenderInbox()
                    </text>);

              tabstrip.Add().Text("Sent")
                  .HtmlAttributes(new { style = "height: 110%;width:120px;border-radius: 6px 6px 0 0;", onclick = "Sentpop()" })
                  .Content(@<text>
                    @RenderSent()
                    </text>);

              tabstrip.Add().Text("Deleted")
                  .HtmlAttributes(new { style = "height: 110%;width:120px;border-radius: 6px 6px 0 0;", onclick = "DeletePop()" })
                  .Content(
                  @<text>
                    @RenderDelete()
                    </text>);


          })
    )
                </td>
            </tr>
        </table>
    </div>
    <div>
    </div>
    @helper RenderGrid()
{
       
        <table align="center" cellspacing="5" cellpadding="5" style="width: 100%;">
            <tr style="width: 100%;">
                <td style="width: 100%; border-right: 0px solid black; vertical-align: top;">
                    @(
 Html.Kendo().Grid((List<Messages.Entities.PatientMessage>)ViewBag.PatientMessages)//ViewBag.PatientMessages)
                .Name("grdInbox")
                .Sortable(m => m.Enabled(true).SortMode(GridSortMode.MultipleColumn))
                .HtmlAttributes(new { style = "" })
                .Columns(
                col =>
                {
                    col.Bound(o => o.IsRead).ClientTemplate("<input type='checkbox' value='#=IsRead#' #if(!IsRead){#checked='checked'#}# />").HtmlAttributes(new { style = "display:none" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                    col.Bound(o => o.RecNo).HtmlAttributes(new { style = "display:none" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                    col.Bound(o => o.NoteDate).Title("Date").Format("{0:dd-mm-yyyy}");
                    col.Bound(o => o.PatName).Title("Patient");
                    col.Bound(o => o.NoteType).Title("Type");
                    col.Bound(o => o.Subject);
                    col.Bound(o => o.Notes).HtmlAttributes(new { style = "display:none" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                }

                )
                .Selectable(sel => sel.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                .DataSource(

                           ds => ds.Ajax().ServerOperation(false).Model(m => m.Id(modelid => modelid.RecNo))

                )

                .Events(ev => ev.Change("onSelectingGirdRow").DataBound("CheckIsRead"))
                )
                    <div id="grdIndox123">
                    </div>
                    <table id="myTable">
                    </table>
                </td>
            </tr>
        </table>
               
    }
    @helper RenderInbox()
{
        @(Html.Kendo().Splitter()
      .Name("vertical").HtmlAttributes(new { style = "height: 500px;width:1124px;" })
      .Orientation(SplitterOrientation.Vertical)
      .Panes(verticalPanes =>
      {
          verticalPanes.Add()
              .HtmlAttributes(new { id = "top-pane" })
              .Scrollable(false)
              .Collapsible(false)
              .Content(
                Html.Kendo().Splitter()
                    .Name("horizontal")
                    .HtmlAttributes(new { style = "height: 100%;" })
                    .Panes(horizontalPanes =>
                    {
                        horizontalPanes.Add()
                            .HtmlAttributes(new { id = "left-pane" })
                            .Size("50%")
                            .Collapsible(true)
                            .Content(
                @<text>
        @RenderGrid()
        </text>);

                        horizontalPanes.Add()
                            .HtmlAttributes(new { id = "center-pane" })
                            .Size("50%")
                            .Content(
                            @<text>
        <table align="center" cellspacing="5" cellpadding="5" style="width: 100%;">
            <tr style="width: 100%;">
                <td style="width: 100%;">
                    <table width="100%">
                        <tr width="100%">
                            <td colspan="2" align="right" style="text-align: right; ">
                                <input type="button" class="default XLargePaddingRight" id="ankDelete" style="width: 90px; display: none; float: right"
                                    onclick="return gotoDelete()" value="Delete" />
                                <input type="button" class="default XLargePaddingRight" id="ankReply" style="width: 90px; display: none; float: right;"
                                    onclick="return gotoReply();" value="Reply" />
                                <input type="button" class="default XLargePaddingRight" id="ankClose" style="width: 90px; float: right;"
                                    value="Close" />
                                <input type="button" class="default XLargePaddingRight" id="ankSend" style="width: 90px; float: right;"
                                    onclick="gotoInboxMailSend()" value="Send" />
                                <br />
                                <br />
                            </td>
                        </tr>
                        <tr width="100%">
                            <td>
                                <table width="100%" id="tblReply" style="display: none;" cellpadding="5" cellspacing="5">
                                    <tr>
                                        <td>
                                            <b>
                                                <label id="lblsubject">
                                                </label>
                                            </b>
                                            <br />
                                        </td>
                                    </tr>
                                   @* <tr>
                                        <td>From :<label id="lblfromemail">@Convert.ToString(ViewBag.clinicemail)</label>
                                            <br />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>To :<label id="lbltoemail">@User.Identity.Name</label>
                                            <br />
                                        </td>
                                    </tr>*@
                                    <tr>
                                        <td width="400px" nowrap="wrap" style="max-width: 400px">
                                            <label id="lblMessage">
                                            </label>
                                            @*@(Html.Kendo().Editor()
.Name("lblMessage")
      .HtmlAttributes(new { style = "width: 470px;height:150px" })
      .Encode(false)
      )*@
                                            <br />
                                            <br />
                                        </td>
                                    </tr>
                                    @*<tr>
                                        <td colspan="2">
                                            <label id="lblDoc">
                                                Regards,<br />
                                                Dr. <b>@Convert.ToString(Session["DoctorName"])</b>
                                            </label>
                                        </td>
                                    </tr>*@
                                </table>
                                <table width="100%" id="tblSend" cellspacing="5">
                                    <tr>
                                        <td>
                                            @* @{
                                            
                                                string docEmail = CustomMethods.GetDoctors(Convert.ToString(System.Web.HttpContext.Current.Session["TopPatId"]));
                                            } To : <span id="spnsendtoemail">@Convert.ToString(ViewBag.clinicemail)</span>
                                             <label id="lblsendtoemail"></label
                                            <input value="Madhava@stellentsoft.com" type="hidden" id="txtsendtoemail" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                             @{
                                                string patEmail = "";
                                                List<xrxPat> lstPatient = CustomMethods.GetPatients();
                                                foreach (xrxPat objPatient in lstPatient)
                                                {
                                                    patEmail = objPatient.Email;
                                                }
                                            }From : <span id="spnsendfromemail">@User.Identity.Name</span> @* <label id="lblsendfromemail"></label>
                                            @*<input value="@patEmail" type="hidden"  id="txtsendfromemail"/>
                                        </td>
                                    </tr>*@
                                    <tr>
                                        <td>
                                            <b>Subject</b>:
                                            <br />
                                            <input type="text" name="txtsendemailsubject" id="txtsendemailsubject" style="width: 450px;" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                            <b>Message</b> :<br />
                                            @(Html.Kendo().Editor()
.Name("txtsendemailcontent")
      .HtmlAttributes(new { style = "width: 470px;height:150px" })

      )
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        </text>);


                    }).ToHtmlString()
              );


      })
)
    }
    <!-- send message grid here -->
    @helper RenderSent()
{
        @(Html.Kendo().Splitter()
              .Name("verticalSent").HtmlAttributes(new { style = "height: 500px;Width:1124px;" })

      .Orientation(SplitterOrientation.Vertical)
      .Panes(verticalPanes =>
      {
          verticalPanes.Add()
              .HtmlAttributes(new { id = "top-pane1" })
              .Scrollable(false)
              .Collapsible(false)
              .Content(
                Html.Kendo().Splitter()
                    .Name("horizontalSent")
                    .HtmlAttributes(new { style = "height: 100%" })
                    .Panes(horizontalPanes =>
                    {
                        horizontalPanes.Add()

                            .HtmlAttributes(new { id = "left-pane1" })
                           .Size("50%")
                            .Collapsible(true)
                            .Content(
                @<text>
        @RenderSentGrid()
        </text>);

                        horizontalPanes.Add()
                            .HtmlAttributes(new { id = "center-pane1", style = "overflow-x:hiddden" })
                           .Size("50%")
                            .Content(
                            @<text>
        <table align="center" cellspacing="5" cellpadding="5" style="width: 100%;">
            <tr style="width: 100%;">
                <td style="width: 100%;">
                    <table width="100%">
                        <tr width="100%">
                            <td colspan="2" align="right" style="text-align: right; ">
                                @*<a class="k-button" id="ankSentReply" style="width: 90px; display: none;" onclick="return gotoSentReply();">
                                    Reply</a> *@<input type="button" class="default XLargePaddingRight" id="ankSentDelete"
                                        style="width: 90px; display: none; float: right" onclick="return gotoSentDelete()"
                                        value="Delete" />
                                <input type="button" class="default XLargePaddingRight" id="ankSentClose" style="width: 90px; float: right;"
                                    onclick="return CloseEditor();" value="Close" /><input type="button"
                                        class="default XLargePaddingRight" id="ankSentSend" onclick="gotoSentMailSend()"
                                        style="width: 90px; float: right" value="Send" />
                                <br />
                                <br />
                            </td>
                        </tr>
                        <tr width="100%">
                            <td>
                                <table width="100%" id="tblSentReply" style="display: none;" cellpadding="5" cellspacing="5">
                                    <tr>
                                        <td>
                                            <b>
                                                <label id="lblSentsubject">
                                                </label>
                                            </b>
                                            <br />
                                        </td>
                                    </tr>
                                    @*<tr>
                                        <td>From :<label id="lblSentfromemail">@User.Identity.Name</label>
                                            <br />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>To :<label id="lblSenttoemail">@Convert.ToString(ViewBag.clinicemail)</label>
                                            <br />
                                        </td>
                                    </tr>*@
                                    <tr>
                                        <td width="400px" nowrap="wrap" style="max-width: 400px">
                                            <span id="lblSentMessage">
                                            </span>
@*                                            @(Html.Kendo().Editor()
        .Name("lblSentMessage")
        
      .HtmlAttributes(new { style = "width: 470px;height:100px" })

      )*@
                                            <br />
                                            <br />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                             @{if (ViewBag.PatientName != null)
                                             {
                                            <label id="lblSentDoc">
                                                Regards,<br />
                                               
                                                    <b>@ViewBag.PatientName</b>
                                            </label>
                                             }
                                             }
                                        </td>
                                    </tr>
                                </table>
                                <table width="100%" id="tblSentSend" cellspacing="5">
                                    <tr>
                                        <td>
                                            @*@{
                                            
                                                string docSentEmail = CustomMethods.GetDoctors(Convert.ToString(System.Web.HttpContext.Current.Session["TopPatId"]));
                                            
                                            @ To : <span id="spnSentsendtoemail">@Convert.ToString(ViewBag.clinicemail)</span>
                                            <input type="hidden" value="madhava@stellentsoft.com" id="txtSentToMail" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @* @{
                                                string patSentEmail = "";
                                                List<xrxPat> lstSentPatient = CustomMethods.GetPatients();
                                                foreach (xrxPat objPatient in lstSentPatient)
                                                {
                                                    patSentEmail = objPatient.Email;
                                                }
                                            } From : <span id="spnSentsendfromemail">@User.Identity.Name</span>
                                            <input type="hidden" value="madhava@stellentsoft.com" id="txtSentFromMail" />
                                        </td>
                                    </tr>*@
                                    <tr>
                                        <td>
                                            <b>Subject</b>:
                                            <br />
                                            <input type="text" name="txtSentsendemailsubject" id="txtSentsendemailsubject" style="width: 450px;" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                            <b>Message</b> :<br />
                                            @(Html.Kendo().Editor()
        .Name("txtSentsendemailcontent")

      .HtmlAttributes(new { style = "width: 470px;height:150px" })

      )
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        </text>);


                    }).ToHtmlString()
              );


      })
                                                                                                )
    }
    @helper RenderSentGrid()
{
       
        <table align="center" cellspacing="5" cellpadding="5" style="width: 100%;">
            <tr style="width: 100%;">
                <td style="width: 100%; border-right: 0px solid black; vertical-align: top;">
                    @(
 Html.Kendo().Grid((List<Messages.Entities.PatientMessage>)ViewBag.PatientSentMessages)
                        .Name("grdSent")
                .HtmlAttributes(new { style = "" })
                .Sortable(m => m.Enabled(true).SortMode(GridSortMode.MultipleColumn))
                .Columns(
                col =>
                {
                    col.Bound(o => o.RecNo).HtmlAttributes(new { style = "display:none;height:500px;width:400px;" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                    col.Bound(o => o.NoteDate).Title("Date").Format("{0:dd-mm-yyyy}");
                    col.Bound(o => o.PatName).Title("Patient");
                    col.Bound(o => o.NoteType).Title("Type");
                    col.Bound(o => o.Subject);
                    col.Bound(o => o.Notes).HtmlAttributes(new { style = "display:none;" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                }

                )
                .Selectable(sel => sel.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                .Sortable()

                .DataSource(
                                   ds => ds.Ajax().ServerOperation(false).Model(m => m.Id(modelid => modelid.RecNo))
                                       //.Read(read => read.Action("Messages_Read", "PatientPortal"))
                        
                )

                        .Events(ev => ev.Change("onSelectingSentGirdRow"))
                )
                </td>
            </tr>
        </table>
               
    }
    <!-- end here -->
    <!-- delete message grid here -->
    @helper RenderDelete()
{
        @(Html.Kendo().Splitter()
              .Name("verticalDelete").HtmlAttributes(new { style = "height: 500px;Width:1124px;" })
      .Orientation(SplitterOrientation.Vertical)
      .Panes(verticalPanes =>
      {
          verticalPanes.Add()
              .HtmlAttributes(new { id = "top-pane2" })
              .Scrollable(false)
              .Collapsible(false)
              .Content(
                Html.Kendo().Splitter()
                    .Name("horizontalDelete")
                    .HtmlAttributes(new { style = "height: 100%;" })
                    .Panes(horizontalPanes =>
                    {
                        horizontalPanes.Add()
                            .HtmlAttributes(new { id = "left-pane2" })
                            .Size("50%")
                            .Collapsible(true)
                            .Content(
                @<text>
        @RenderDeleteGrid()
        </text>);

                        horizontalPanes.Add()
                            .HtmlAttributes(new { id = "center-pane2" })
                            .Size("50%")
                            .Content(
                            @<text>
        <table align="center" cellspacing="5" cellpadding="5" style="width: 100%;">
            <tr style="width: 100%;">
                <td style="width: 100%;">
                    <table width="100%">
                        <tr width="100%" style="display: none">
                            <td colspan="2" align="right" style="text-align: right;">
                                <a class="k-button" id="ankDeleteReply" style="width: 90px; display: none;" onclick="return gotoDeleteReply();">Reply</a> <a class="k-button" id="ankDeleteDelete" style="width: 90px; display: none;"
                                    onclick="return gotoDeleteDelete()">Delete</a> <a class="k-button" id="ankDeleteSend"
                                        onclick="gotoDeleteMailSend()" style="width: 90px;">Send</a> <a class="k-button"
                                            id="ankDeleteClose" style="width: 90px;">Close</a>
                                <br />
                                <br />
                            </td>
                        </tr>
                        <tr width="100%">
                            <td>
                                <table width="100%" id="tblDeleteReply" style="display: none;" cellpadding="5" cellspacing="5">
                                    <tr>
                                        <td>
                                            <b>
                                                <label id="lblDeletesubject">
                                                </label>
                                            </b>
                                            <br />
                                        </td>
                                    </tr>
                                   @* <tr>
                                        <td>From :<label id="lblDeletefromemail">@Convert.ToString(ViewBag.clinicemail)</label>
                                            <br />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>To :<label id="lblDeletetoemail">
                                            @User.Identity.Name</label>
                                            <br />
                                        </td>
                                    </tr>*@
                                    <tr>
                                        <td>
                                            <label id="lblDeleteMessage">
                                            </label>
                                            <br />
                                            <br />
                                        </td>
                                    </tr>
                                    @*<tr>
                                        <td colspan="2">
                                            <label id="lblDeleteDoc">
                                                Regards,<br />
                                                Dr. <b>@Convert.ToString(Session["DoctorName"])</b>
                                            </label>
                                        </td>
                                    </tr>*@
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        </text>);


                    }).ToHtmlString()
              );


      })
)
    }
    @helper RenderDeleteGrid()
{
       
        <table align="center" cellspacing="5" cellpadding="5" style="width: 100%;">
            <tr style="width: 100%;">
                <td style="width: 100%; border-right: 0px solid black; vertical-align: top;">
                    @(
 Html.Kendo().Grid((List<Messages.Entities.PatientMessage>)ViewBag.DeletedMesages)
                        .Name("grdDelete")
                .HtmlAttributes(new { style = "" })
                .Sortable(m => m.Enabled(true).SortMode(GridSortMode.MultipleColumn))
                .Columns(
                col =>
                {
                    col.Bound(o => o.RecNo).HtmlAttributes(new { style = "display:none" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                    col.Bound(o => o.DeletedDatetime).Title("Date").Format("{0:dd-mm-yyyy}");
                    col.Bound(o => o.PatName).Title("Patient");
                    col.Bound(o => o.NoteType).Title("Type");
                    col.Bound(o => o.Subject);
                    col.Bound(o => o.Notes).HtmlAttributes(new { style = "display:none" }).Title("").HeaderHtmlAttributes(new { style = "display:none" });
                }

                )
                .Selectable(sel => sel.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                .DataSource(
                           ds => ds.Ajax().ServerOperation(false).Model(m => m.Id(modelid => modelid.RecNo))
                               //.Read(read => read.Action("Messages_Read", "PatientPortal"))
                )

                        .Events(ev => ev.Change("onSelectingDeleteGirdRow"))
                )
                </td>
            </tr>
        </table>
               
    }
    <div id="dialog">
     
    </div>
    <!-- end here -->
</body>
</html>
